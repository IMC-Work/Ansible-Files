---
- hosts: all
  gather_facts: false
  vars:
    prelivepri: http://IFWQTV0100.TEST01GLOBAL.LLOYDSTSB.COM:8530
    prelivealt: http://IFWQTV0101.TEST01GLOBAL.LLOYDSTSB.COM:8530
    WSUS_Location: "Pre-Live (LON02)"
  tasks:

  - name: nslookup the default gateway
    win_command: ping {{ inventory_hostname }}
    register: ping_results
    ignore_errors: True
    args:
      warn: false

  - name: set fact on host on the best location - PRE-LIVE
    set_fact:
      WSUS_Server1: "{{ prelivepri }}"
      WSUS_Server2: "{{ prelivealt }}"
      WSUS_Location: Pre-Live
      cacheable: yes
    when: ping_results.stdout.find("10.177.0") != -1
#    when: ping_results.stdout.find("192.168.1") != -1

  - name: print the WSUS Servers to use for this server
    debug:
      msg:
        - "Primary server is {{ WSUS_Server1 }}"
        - "Alternate server is {{ WSUS_Server2 }}"
        - "WSUS Server location - {{ WSUS_Location }}"

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
      name: WUServer
      data: "{{ WSUS_Server1 }}"
      type: string

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
      name: WUStatusServer
      data: "{{ WSUS_Server1 }}"
      type: string

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
      name: UpdateServiceURLAlternative
      data: "{{ WSUS_Server2 }}"
      type: string

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
      name: TargetGroupEnabled
      data: "1"
      type: dword

  - name: Obtain Information about the Operating System
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion
      name: ProductName
    register: os

  - name: set default TargetGroup
    set_fact:
      TargetGroup: "Unassigned Computers"

  - name: set value to 2012 if Server 2012
    set_fact:
      TargetGroup: "Server_2012"
    when: os.value.find("2012") != -1

  - name: set value to 2016 if Server 2016
    set_fact:
      TargetGroup: "Server_2016"
    when: os.value.find("2016") != -1

  - name: set value to 2019 if Server 2019
    set_fact:
      TargetGroup: "Server_2019"
    when: os.value.find("2019") != -1

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate
      name: TargetGroup
      data: "{{ TargetGroup }}"
      type: string

  - name: Check if Registry key exists
    win_reg_stat:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
    register: AU

  - name: Create registry key if it does not exist
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
    when: AU.exists == false

  - name: Amend/Add new key to the registry
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
      name: UseWUServer
      data: "1"
      type: dword

  - name: restart the windows update service
    win_service:
  #    name: wuauserv
      name: spooler
      state: restarted
    register: result
