---
- hosts: all
  gather_facts: false
  vars:
     total_uptime_hours:
     total_uptime_mins:
     uptime_days:
     uptime_hours:
     uptime_mins:

  tasks:

   - name: get the affected windows host's uptime
     win_shell: "[convert]::ToInt32(($(Get-Date) - $(Get-WmiObject
        Win32_OperatingSystem).ConvertToDateTime($(Get-WmiObject
        Win32_OperatingSystem).LastBootUpTime)).TotalMInutes);"
     register: uptime_raw
     changed_when: false
     ignore_errors: true

   - name: Get total minutes
     set_fact:
      total_uptime_mins: "{{ uptime_raw.stdout_lines[0] | int }}"

   - name: powershell gets total days
     win_shell: "{{ total_uptime_mins }} / 1440"
     register: uptime_days

   - name: Get total days
     set_fact:
      uptime_days: "{{ uptime_days.stdout_lines[0] | int }}"

   - name: powershell get total hours
     win_shell: "{{ total_uptime_mins }} / 60"
     register: uptime_hours

   - name: Get total hours
     set_fact:
      uptime_hours: "{{ uptime_hours.stdout_lines[0] | int }}"

   - name: powershell get total mins
     win_shell: "{{ total_uptime_mins }} / 1"
     register: uptime_mins

   - name: Get remaining minutes
     set_fact:
      uptime_mins: "{{ uptime_mins.stdout_lines[0] | int }}"

   - name: Convert Uptime related variables
     set_fact:
     # uptime_mins: "{{ uptime_raw.stdout_lines[0] | int }}"
    #  uptime_days: "{{ uptime_raw.stdout_lines[0] | int / 1440 }}"
    #  uptime_hours: "{{ uptime_raw.stdout_lines[0] | int / 60 }}"
      #      uptime_days1: "{{ uptime_days | int | truncate }}"

   - name: information
     debug:
       msg:
               #         - "uptime is {{uptime_mins}} {{uptime_hours}} {{uptime_days}}"
               #- "number of days: = {{ uptime_days | truncate | int }}"
         - "Total_Uptime_Minutes: = {{ total_uptime_mins }}"
         - "Total uptime days:= {{ uptime_days }}"
         - "Total uptime hours:= {{ uptime_hours }}"
         - "Total uptime minutes:= {{ uptime_mins }}"
