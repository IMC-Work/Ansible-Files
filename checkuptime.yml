---
- hosts: all
  gather_facts: false
  vars:
     uptime_threshold: 60
     uptime_days: 1
  tasks:

   - name: run PS_Script ServerUptime.ps1
     win_shell: C:\temp\PS_Scripts\ServerUptime.ps1

   - name: copy disk space information from file
     win_shell:
       Select-String -Path C:\temp\ServerUptime1.txt -pattern "Uptime="
     register: ServerUptime

   - name: remove everything apart from the uptime value
     set_fact: uptime={{ ServerUptime | regex_replace('.*=') | regex_replace ("'.*") }}

   - name: discover how many days since the last reboot
     set_fact: uptime_days={{ uptime | int }}

   - name: Check if the server requires a reboot or not
     set_fact: uptime_above_limit={{ (uptime_days | int) >= (uptime_threshold | int) }}

   - debug:
       msg: "Below Uptime_threshold - No reboot required on - {{ inventory_hostname }} "
     when: uptime_above_limit == false

   - debug:
       msg: "Above Uptime_threshold - so rebooting server - {{ inventory_hostname }} - NOW"
     when: uptime_above_limit == true

   - name: Reboot server
     win_reboot:
      reboot_timeout: 100
     register: reboot_status
     when: uptime_above_limit == true

   - debug:
       msg: "{{ inventory_hostname }} has been rebooted"
     when: uptime_above_limit == true
