---
- hosts: all
  gather_facts: false
  vars:
     uptime_threshold: 60

  tasks:

   - name: run PS_Script ServerUptime.ps1
     win_shell: C:\temp\PS_Scripts\ServerUptime.ps1

   - name: copy disk space information from file
     win_shell:
       Select-String -Path C:\temp\ServerUptime1.txt -pattern "Uptime="
     register: ServerUptime

   - name: remove everything apart from service name
     set_fact: Uptime={{ ServerUptime | regex_replace('.*=') | regex_replace ("'.*") }}
#
#   - name: Set Uptime_Days Variable
#     set_fact: uptime_days={{ Uptime | int }}
#
#   - name: Set Uptime_Above_Limit Variable
#     set_fact: uptime_above_limit={{ (uptime_days | int) >= (uptime_threshold | int) }}

#   - name: set_facts
#     set_fact:
#       uptime: {{ ServerUptime | regex_replace('.*=') | regex_replace ("'.*") }}

   - name: set_fact again
     set_fact:
       uptime_days: "{{ uptime | int }}"
       uptime_above_limit: "{{ (uptime_days | int) >= (uptime_threshold | int) }}"

   - debug:
       msg: "Below Uptime_threshold - No reboot required on - SERVERNAME "
     when: uptime_above_limit == false

   - debug:
       msg: "Above Uptime_threshold - so rebooting server - SERVERNANME - NOW"
     when: uptime_above_limit == true

   - name: Reboot server
     win_reboot:
      reboot_timeout: 100
     register: reboot_status
     when: uptime_above_limit == true

   - debug:
       msg: "Server - SERVERNAME has been rebooted"
     when: uptime_above_limit == true
