---
- hosts: all
  gather_facts: false
  vars:
     uptime_threshold: 60

  tasks:

   - name: run PS_Script ServerUptime.ps1
     win_shell: C:\temp\PS_Scripts\ServerUptime.ps1

   - name: copy disk space information from file
     win_shell:
       Select-String -Path C:\temp\ServerUptime1.txt -pattern "@{Uptime="
     register: ServerUptime

   - debug:
       msg: "serverUptime = {{ ServerUptime }}"

   - name: read file to get free disk space
     set_fact: Uptime={{ ServerUptime.stdout_lines }}

   - debug:
       msg: "Uptime = {{ Uptime }}"

#   - name: trim file to get free disk space value
#     set_fact: data1={{ freediskspace | regex_replace('.*=') | regex_replace ("'.*") }}

   - name: Save Uptime related variables
     set_fact:
      uptime_mins: "{{ uptime.stdout_lines[0] | int }}"
      uptime_above_limit:
        "{{ (uptime.stdout_lines[0] | int) >= (uptime_threshold | int) }}"

   - debug:
       msg: "Below Uptime_threshold - No reboot required {{ uptime_raw.stdout_lines[0] }}"
     when: uptime_above_limit == false

   - debug:
       msg: "Above Uptime_threshold - so rebooting the server NOW"
     when: uptime_above_limit == true

   - name: Reboot server
     win_reboot:
      reboot_timeout: 100
     register: reboot_status
     when: uptime_above_limit == true

   - debug:
       msg: "Server was rebooted"
     when: uptime_above_limit == true
