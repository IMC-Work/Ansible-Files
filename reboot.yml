---
- hosts: all
  gather_facts: false
  vars:

  tasks:
  - name: Reboot server
    win_reboot:
      reboot_timeout: 1
    ignore_errors: true
    register: reboot_status

  - debug:
      msg: "{{ inventory_hostname }} has been rebooted"
    when: reboot_status.failed == false

  - debug:
      msg: "{{ inventory_hostname }} is still being rebooted"
    when: reboot_status.failed == true

  - name: perform when server is not responding from reboot
    block:

    - name: pause for another 5 minutes for server to reboot
      pause:
        seconds: 5

#    - name: Reboot server (to ensure server is down for testing)
#      win_reboot:
#        reboot_timeout: 1
#      ignore_errors: true

    - name: ping server
      win_ping:
      register: ping_test1
      ignore_errors: true

    - debug:
        msg: "{{ inventory_hostname }} has been rebooted"
      when: ping_test1.ping == "pong"

    - name: pause tasks for 60 seconds to allow service to be stopped
      pause:
        seconds: 60
        prompt: Waiting for server to reboot

    - name: test play
      win_ping:
      register: ping_test2

    - debug:
        msg: "{{ inventory_hostname }} has been rebooted"
      when: ping_test2.ping == "pong" 

    when: reboot_status.failed == true
